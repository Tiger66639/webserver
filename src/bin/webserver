<?php

define('WEBSERVER_BASEDIR', __DIR__ . '/../');
define('WEBSERVER_AUTOLOADER', WEBSERVER_BASEDIR . '../vendor/autoload.php');

require WEBSERVER_AUTOLOADER;

// set current dir to base dir for relative dirs
chdir(WEBSERVER_BASEDIR);

// read in json configuration
//$mainConfiguration = new \TechDivision\WebServer\Configuration\MainJsonConfiguration(WEBSERVER_BASEDIR . 'etc/webserver.json');
// read in xml configuration <- just comment this in to use xml configuration
$mainConfiguration = new \TechDivision\WebServer\Configuration\MainXmlConfiguration(WEBSERVER_BASEDIR . 'etc/webserver.xml');

// init loggers
$loggers = array();
foreach ($mainConfiguration->getLoggerConfigs() as $loggerConfig) {

    // init processors
    $processors = array();
    foreach ($loggerConfig->getProcessors() as $processorType) {
        // create processor
        $processors[] = new $processorType();
    }
    // init handlers
    $handlers = array();
    foreach ($loggerConfig->getHandlers() as $handlerType => $handlerData) {
        // create handler
        $handlerTypeClass = new ReflectionClass($handlerType);
        $handler = $handlerTypeClass->newInstanceArgs($handlerData["params"]);
        if (isset($handlerData['formatter'])) {
            $formatterData = $handlerData['formatter'];
            $formatterType = $formatterData['type'];
            // create formatter
            $formatterClass = new ReflectionClass($formatterType);
            $formatter = $formatterClass->newInstanceArgs($formatterData['params']);
            // set formatter to logger
            $handler->setFormatter($formatter);
        }
        $handlers[] = $handler;
    }

    // get logger type
    $loggerType = $loggerConfig->getType();
    // init logger instance
    $logger = new $loggerType($loggerConfig->getChannel(), $handlers, $processors);
    // set logger by name
    $loggers[$loggerConfig->getName()] = $logger;
}

// init servers
$servers = array();
foreach ($mainConfiguration->getServerConfigs() as $serverConfig) {
    // get type definitions
    $serverType = $serverConfig->getType();
    $serverContextType = $serverConfig->getServerContextType();

    // init server context
    $serverContext = new $serverContextType();
    $serverContext->init($serverConfig);
    $serverContext->injectLogger($loggers[$serverConfig->getLoggerName()]);

    // init and start server
    $servers[] = new $serverType($serverContext);
}

// wait for servers
foreach ($servers as $server) {
    $server->join();
}